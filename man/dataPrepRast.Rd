% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataPrepRast.R
\docType{methods}
\name{dataPrepRast}
\alias{dataPrepRast}
\title{Crop, reproject, and mask a raster map}
\usage{
dataPrepRast(x, cropWith = NULL, maskWith = NULL, reprojectTo = NULL,
  outPath = NULL, fileOut = NULL, formatOut = "GTiff", timings = FALSE,
  ...)
}
\arguments{
\item{x}{A \code{RasterLayer} object or the name of one.}

\item{cropWith}{Extent object, or any object from which an Extent object can
be extracted (see Details of \code{\link[raster]{crop}}).}

\item{maskWith}{Raster* or Spatial object passed to \code{\link[raster]{mask}}.}

\item{reprojectTo}{Raster* or Spatial object passed to \code{\link[raster]{crs}}.}

\item{outPath}{Path where fileOut is saved.}

\item{fileOut}{File name to write to (\code{\link[raster]{writeRaster}}).}

\item{formatOut}{File format to write out (\code{\link[raster]{writeRaster}}).
If not specified, GTiff will be used.}

\item{timings}{Logical indicating whether Sys.time messages should be
suppressed. Default is \code{FALSE}.}

\item{...}{Additional arguments to the aforementioned \code{raster} functions.}
}
\value{
A \code{RasterLayer} abject.
}
\description{
This script reprojects and crop a raster using a raster or polygon object.
}
\examples{
if (require(maptools)) {
  library(raster)
  library(maptools)
  data("wrld_simpl")

  # From scratch, random raster
  xy <- matrix(rnorm(2500), 50, 50)
  inputrast <- raster(xy)

  # Set Canada extent and projection
  extent(inputrast) <- c(-170, -15, 25, 100)
  projection(inputrast) <- CRS("+proj=longlat +datum=WGS84")

  # Extract Canada boundary from wrld_simpl
  canada <- wrld_simpl[which(wrld_simpl@data$NAME == 'Canada'),]

  # dataPrepRast
  x <- dataPrepRast(inputrast, cropWith = canada , maskWith = canada,
                    reprojectTo = inputrast, timings = TRUE)
}

}
